{"version":3,"file":"detroit-main-menu.umd.js","sources":["detroit-main-menu.umd.js"],"sourcesContent":["/**\n * Copyright 2019\n * @license MIT, see License.md for full text.\n */\nimport { LitElement, html } from \"lit-element\";\n\n/**\n * `detroit-main-menu`\n * `Site main menu component`\n *\n * @microcopy - language worth noting:\n *  -\n *\n * @customElement\n * @lit-html\n * @lit-element\n * @demo demo/index.html\n */\nclass DetroitMainMenu extends LitElement {\n  \n  // render function\n  render() {\n    return html`\n<style>:host {\n  display: block; }\n\n:host([hidden]) {\n  display: none; }\n</style>\n<slot></slot>\n<div>${this.active}</div>`;\n  }\n\n  // properties available to the custom element for data binding\n  static get properties() {\n    return {\n  \"active\": {\n    \"name\": \"active\",\n    \"type\": \"Boolean\",\n    \"value\": \"false\",\n    \"reflectToAttribute\": true,\n    \"observer\": \"_activeChanged\"\n  }\n}\n;\n  }\n\n  /**\n   * Store the tag name to make it easier to obtain directly.\n   * @notice function name must be here for tooling to operate correctly\n   */\n  tag() {\n    return \"detroit-main-menu\";\n  }\n\n  // life cycle\n  constructor() {\n    super();\n\n    this.tag = DetroitMainMenu.tag;\n    // map our imported properties json to real props on the element\n    // @notice static getter of properties is built via tooling\n    // to edit modify src/detroit-main-menu-properties.json\n    let obj = DetroitMainMenu.properties;\n    for (let p in obj) {\n      if (obj.hasOwnProperty(p)) {\n        if (this.hasAttribute(p)) {\n          this[p] = this.getAttribute(p);\n        } else {\n          this.setAttribute(p, obj[p].value);\n          this[p] = obj[p].value;\n        }\n      }\n    }\n  }\n  /**\n   * life cycle, element is afixed to the DOM\n   */\n  connectedCallback() {\n    super.connectedCallback();\n  }\n  // static get observedAttributes() {\n  //   return [];\n  // }\n  // disconnectedCallback() {}\n\n  // attributeChangedCallback(attr, oldValue, newValue) {}\n  // Observer active for changes\n  _activeChanged(newValue, oldValue) {\n    if (typeof newValue !== typeof undefined) {\n      console.log(newValue);\n    }\n  }\n}\ncustomElements.define(\"detroit-main-menu\", DetroitMainMenu);\nexport { DetroitMainMenu };\n"],"names":["DetroitMainMenu","tag","obj","properties","p","hasOwnProperty","_this","hasAttribute","getAttribute","setAttribute","value","LitElement","html","this","active","newValue","oldValue","_typeof","console","log","customElements","define"],"mappings":"gqDAkBMA,mKAyCGC,IAAMD,EAAgBC,QAIvBC,EAAMF,EAAgBG,eACrB,IAAIC,KAAKF,EACRA,EAAIG,eAAeD,KACjBE,EAAKC,aAAaH,KACfA,GAAKE,EAAKE,aAAaJ,MAEvBK,aAAaL,EAAGF,EAAIE,GAAGM,SACvBN,GAAKF,EAAIE,GAAGM,6PApDGC,yDAInBC,WAQJC,KAAKC,4CAsBD,+DAjBA,QACC,MACA,cACA,gBACC,4BACa,WACV,mKA+CCC,EAAUC,iBACnBC,EAAOF,IACTG,QAAQC,IAAIJ,YAIlBK,eAAeC,OAAO,oBAAqBrB"}